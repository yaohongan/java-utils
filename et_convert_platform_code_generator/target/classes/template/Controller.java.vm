package ${package}.${moduleName}.controller;

import java.util.Arrays;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.apache.ibatis.annotations.Update;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;

import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import com.juncdt.platform.api.utils.R;



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
@Api(value = "${comments}",tags = "${comments}的tag")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表分页
     */
    @GetMapping("/page")
    @ApiOperation(value = "列表分页",notes = "列表分页notes",nickname = "csc")
    public R list(Page page, ${className}Entity ${classname}){
        return R.ok().put("data", ${classname}Service.page(page, Wrappers.query(${classname})));
    }


    /**
     * id查询信息
     */
    @GetMapping("/info/{${pk.attrname}}")
    @ApiOperation(value = "id查询信息",notes = "id查询信息notes",nickname = "csc")
    public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});

        return R.ok().put("data", ${classname});
    }

    /**
     * 保存
     */
    @PostMapping("/save")
    @ApiOperation(value = "保存",notes = "保存notes",nickname = "csc")
    public R save(@RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});

        return R.ok().put("data",${classname});
    }

    /**
     * 修改
     */
    @PutMapping("/update")
    @ApiOperation(value = "修改",notes = "修改notes",nickname = "csc")
    public R update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.updateById(${classname});

        return R.ok().put("data",${classname});
    }

    /**
     * 删除
     */
    @DeleteMapping("/delete")
    @ApiOperation(value = "删除",notes = "删除notes",nickname = "csc")
    public R delete(${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));

        return R.ok();
    }

}
